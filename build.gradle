buildscript {
    ext.kotlin_version = '1.2.41'
    repositories {
        mavenCentral()
        jcenter()
        maven { url "https://plugins.gradle.org/m2/" }
    }
    dependencies {
        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlin_version"
        classpath 'net.ltgt.gradle:gradle-errorprone-plugin:0.0.10'
        classpath 'com.github.ben-manes:gradle-versions-plugin:0.15.0'
        classpath 'com.selesse:gradle-git-changelog:0.3.0'
        classpath "org.jfrog.buildinfo:build-info-extractor-gradle:4+"
        classpath "org.jetbrains.dokka:dokka-gradle-plugin:0.9.16"
        classpath "gradle.plugin.com.palantir.gradle.gitversion:gradle-git-version:0.11.0"
    }
}

apply plugin: 'kotlin'
apply plugin: 'com.selesse.git.changelog'
apply plugin: 'net.ltgt.errorprone'
apply plugin: 'com.jfrog.artifactory'
apply plugin: 'org.jetbrains.dokka'
apply plugin: 'maven-publish'
apply plugin: 'com.palantir.git-version'

repositories {
    mavenCentral()
    jcenter()
}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])
    implementation "org.jetbrains.kotlin:kotlin-stdlib:$kotlin_version"
    compile "io.reactivex.rxjava2:rxkotlin:2.2.0"
    compile "org.threeten:threetenbp:1.3.6"

    implementation "org.bouncycastle:bcprov-jdk15on:1.59"
    compile "org.slf4j:slf4j-api:1.7.25"
    implementation "org.slf4j:slf4j-simple:1.7.25"
    implementation "com.google.guava:guava:25.0-jre"

    implementation "com.squareup.retrofit2:retrofit:2.3.0"
    implementation "com.squareup.retrofit2:converter-gson:2.3.0"
    implementation "com.squareup.retrofit2:adapter-rxjava2:2.3.0"
    compile "com.google.code.gson:gson:2.8.4"
    compile "com.squareup.okhttp3:okhttp:3.9.1"
    implementation "com.squareup.okhttp3:logging-interceptor:3.9.1"

    testImplementation "org.jetbrains.kotlin:kotlin-test:$kotlin_version"
    testImplementation "org.jetbrains.kotlin:kotlin-test-junit:$kotlin_version"
    testImplementation "org.amshove.kluent:kluent:1.34"
}

group = "ch.decent"
version = gitVersion()

changelog {
    markdown {
        commitFormat = '* %s (%aE)'
    }
}

static def isCI() {
    System.getenv("CI")
}

// build a jar with source files
task sourcesJar(type: Jar) {
    from sourceSets.main.java.srcDirs
    classifier = 'sources'
}

task dokkaJavadoc(type: org.jetbrains.dokka.gradle.DokkaTask) {
    outputFormat = "javadoc"
    outputDirectory = javadoc.destinationDir
}

// build a jar with javadoc
task javadocJar(type: Jar, dependsOn: javadoc) {
    classifier = 'javadoc'
    from javadoc.destinationDir
}

artifacts {
    archives sourcesJar
    archives javadocJar
}

publishing {
    publications {
        mavenJava(MavenPublication) {
            from components.java
            artifact sourcesJar {
                classifier 'sources'
            }
        }
    }
}

artifactory {
    contextUrl = System.getenv("ARTIFACTORY_URL")
    publish {
        defaults {
            publications('mavenJava')
        }
        repository {
            repoKey = System.getProperty("ARTIFACTORY_REPO")
            username = System.getenv("ARTIFACTORY_USER")
            password = System.getenv("ARTIFACTORY_PASS")
            maven = true
        }
    }
}